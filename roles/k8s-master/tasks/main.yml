--- 
  # initializing master

  - name: 'set hostname on master'
    ansible.builtin.hostname:
      name: master
      use: systemd

  - name: 'kubeadm config images pull'
    command: 'kubeadm config images pull'

  - name: 'initializing master'
    shell: kubeadm init --pod-network-cidr={{ cidr }} --cri-socket=unix:///var/run/crio/crio.sock --ignore-preflight-errors=NumCPU --ignore-preflight-errors=Mem --node-name=master
    ignore_errors: true
  
  # Creating the .kube directory
  - name: "Creating .kube directory"
    shell: "mkdir -p $HOME/.kube"

  # Copying the /etc/k8s/admin.conf$HOME/.kube/config
  - name: "Copying /etc/kubernetes/admin.conf $HOME/.kube/config"
    shell: "sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config"

  # Changing the owner permission of $HOME/.kube/config
  - name: "changing owner permission"
    shell: "sudo chown $(id -u):$(id -g) $HOME/.kube/config"

  #Adding the Calico Overlay NetWork for the Communication
  - name: "get calico.yml file and overwrite the Network "
    get_url:
            url: https://docs.projectcalico.org/manifests/calico.yaml
            dest: $HOME/calico.yaml

  - name: "apply calico CNI"
    command: "kubectl apply -f $HOME/calico.yaml "
    register: calico_status

  - name: Calico Network Status
    debug:
            msg: "Calico Network Status => {{ calico_status.failed }}"  

  # Genrate token to join that cluster
  - name: "Generating Token"
    shell: "kubeadm token create  --print-join-command"
    register: token
    ignore_errors: true

  # print token
  - name: "Command to join cluster as nodes"
    debug:
        msg: "{{ token['stdout'] }}"
      
  # save token for further use
  - name: "host adding for storing token for further use"
    add_host:
            name: "token_master"
            token: "{{ token.stdout }}"